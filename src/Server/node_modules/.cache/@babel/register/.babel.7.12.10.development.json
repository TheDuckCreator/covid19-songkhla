{
  "{\"sourceRoot\":\"/home/theethawat/covid19-songkhla/src/Server/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/theethawat/covid19-songkhla/src/Server\",\"filename\":\"/home/theethawat/covid19-songkhla/src/Server/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/theethawat/covid19-songkhla/src/Server\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/theethawat/covid19-songkhla/src/Server",
      "filename": "/home/theethawat/covid19-songkhla/src/Server/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/theethawat/covid19-songkhla/src/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/theethawat/covid19-songkhla/src/Server/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/theethawat/covid19-songkhla/src/Server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mainroute = _interopRequireDefault(require(\"./mainroute\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar app = (0, _express.default)(); // Using Middleware\n\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', 'http://localhost:3000');\n  res.header('Access-Control-Allow-Origin', 'http://localhost');\n  res.header('Access-Control-Allow-Methods', 'POST, GET, PUT, PATCH, DELETE, OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Option, Authorization');\n  next();\n});\napp.use((0, _cors.default)());\napp.use(_bodyParser.default.urlencoded({\n  extended: false\n}));\napp.use(_bodyParser.default.json()); // Database\n\n_mongoose.default.connect(_config.default.dbConnectionString, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nvar db = _mongoose.default.connection;\ndb.on('error', function (err) {\n  console.log('Connect to MongoDB have some error :( ');\n  console.error(err);\n});\ndb.on('open', function () {\n  console.log('Connect to Mongodb Success');\n}); // Frontend Routing\n//TODO: Change it to render html static element\n\nvar wwwPath = _path.default.join(__dirname, 'www');\n\napp.use('/', _express.default.static(wwwPath));\napp.use('/edit', _express.default.static(wwwPath));\napp.use('/login', _express.default.static(wwwPath));\napp.use('/about', _express.default.static(wwwPath)); // Main Routing (it will behind the API)\n\napp.use('/api', _mainroute.default);\napp.listen(_config.default.port, function () {\n  console.log('Start TDC App');\n  console.log('Backend App Running at Port', _config.default.port);\n  console.log('-----------');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInJlcSIsInJlcyIsIm5leHQiLCJoZWFkZXIiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsIm1vbmdvb3NlIiwiY29ubmVjdCIsImNvbmZpZyIsImRiQ29ubmVjdGlvblN0cmluZyIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwid3d3UGF0aCIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiRXhwcmVzcyIsInN0YXRpYyIsIk1haW5Sb3V0ZSIsImxpc3RlbiIsInBvcnQiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsdUJBQVosQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUMxQkQsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsNkJBQVgsRUFBMEMsdUJBQTFDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQTBDLGtCQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FDRSw4QkFERixFQUVFLHdDQUZGO0FBSUFGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUNFLDhCQURGLEVBRUUscUNBRkY7QUFJQUQsRUFBQUEsSUFBSTtBQUNMLENBWkQ7QUFjQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsb0JBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFLLG9CQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVFLLG9CQUFXRyxJQUFYLEVBQVIsRSxDQUVBOztBQUNBQyxrQkFBU0MsT0FBVCxDQUFpQkMsZ0JBQU9DLGtCQUF4QixFQUE0QztBQUMxQ0MsRUFBQUEsZUFBZSxFQUFFLElBRHlCO0FBRTFDQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUZzQixDQUE1Qzs7QUFJQSxJQUFNQyxFQUFFLEdBQUdOLGtCQUFTTyxVQUFwQjtBQUNBRCxFQUFFLENBQUNFLEVBQUgsQ0FBTSxPQUFOLEVBQWUsVUFBQ0MsR0FBRCxFQUFTO0FBQ3RCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3Q0FBWjtBQUNBRCxFQUFBQSxPQUFPLENBQUNFLEtBQVIsQ0FBY0gsR0FBZDtBQUNELENBSEQ7QUFJQUgsRUFBRSxDQUFDRSxFQUFILENBQU0sTUFBTixFQUFjLFlBQU07QUFDbEJFLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUFaO0FBQ0QsQ0FGRCxFLENBSUE7QUFDQTs7QUFDQSxJQUFNRSxPQUFPLEdBQUdDLGNBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixLQUFyQixDQUFoQjs7QUFDQTFCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYTBCLGlCQUFRQyxNQUFSLENBQWVMLE9BQWYsQ0FBYjtBQUNBdkIsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQjBCLGlCQUFRQyxNQUFSLENBQWVMLE9BQWYsQ0FBakI7QUFDQXZCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0IwQixpQkFBUUMsTUFBUixDQUFlTCxPQUFmLENBQWxCO0FBQ0F2QixHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCMEIsaUJBQVFDLE1BQVIsQ0FBZUwsT0FBZixDQUFsQixFLENBRUE7O0FBQ0F2QixHQUFHLENBQUNDLEdBQUosQ0FBUSxNQUFSLEVBQWdCNEIsa0JBQWhCO0FBRUE3QixHQUFHLENBQUM4QixNQUFKLENBQVdsQixnQkFBT21CLElBQWxCLEVBQXdCLFlBQU07QUFDNUJYLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVo7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNkJBQVosRUFBMkNULGdCQUFPbUIsSUFBbEQ7QUFDQVgsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksYUFBWjtBQUNELENBSkQiLCJzb3VyY2VSb290IjoiL2hvbWUvdGhlZXRoYXdhdC9jb3ZpZDE5LXNvbmdraGxhL3NyYy9TZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcuanNvbidcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBNYWluUm91dGUgZnJvbSAnLi9tYWlucm91dGUnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuXG5jb25zdCBhcHAgPSBFeHByZXNzKClcblxuLy8gVXNpbmcgTWlkZGxld2FyZVxuYXBwLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHtcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcpXG4gIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsICdodHRwOi8vbG9jYWxob3N0JylcbiAgcmVzLmhlYWRlcihcbiAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsXG4gICAgJ1BPU1QsIEdFVCwgUFVULCBQQVRDSCwgREVMRVRFLCBPUFRJT05TJ1xuICApXG4gIHJlcy5oZWFkZXIoXG4gICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLFxuICAgICdDb250ZW50LVR5cGUsIE9wdGlvbiwgQXV0aG9yaXphdGlvbidcbiAgKVxuICBuZXh0KClcbn0pXG5cbmFwcC51c2UoY29ycygpKVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuXG4vLyBEYXRhYmFzZVxubW9uZ29vc2UuY29ubmVjdChjb25maWcuZGJDb25uZWN0aW9uU3RyaW5nLCB7XG4gIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxufSlcbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvblxuZGIub24oJ2Vycm9yJywgKGVycikgPT4ge1xuICBjb25zb2xlLmxvZygnQ29ubmVjdCB0byBNb25nb0RCIGhhdmUgc29tZSBlcnJvciA6KCAnKVxuICBjb25zb2xlLmVycm9yKGVycilcbn0pXG5kYi5vbignb3BlbicsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ0Nvbm5lY3QgdG8gTW9uZ29kYiBTdWNjZXNzJylcbn0pXG5cbi8vIEZyb250ZW5kIFJvdXRpbmdcbi8vVE9ETzogQ2hhbmdlIGl0IHRvIHJlbmRlciBodG1sIHN0YXRpYyBlbGVtZW50XG5jb25zdCB3d3dQYXRoID0gcGF0aC5qb2luKF9fZGlybmFtZSwgJ3d3dycpXG5hcHAudXNlKCcvJywgRXhwcmVzcy5zdGF0aWMod3d3UGF0aCkpXG5hcHAudXNlKCcvZWRpdCcsIEV4cHJlc3Muc3RhdGljKHd3d1BhdGgpKVxuYXBwLnVzZSgnL2xvZ2luJywgRXhwcmVzcy5zdGF0aWMod3d3UGF0aCkpXG5hcHAudXNlKCcvYWJvdXQnLCBFeHByZXNzLnN0YXRpYyh3d3dQYXRoKSlcblxuLy8gTWFpbiBSb3V0aW5nIChpdCB3aWxsIGJlaGluZCB0aGUgQVBJKVxuYXBwLnVzZSgnL2FwaScsIE1haW5Sb3V0ZSlcblxuYXBwLmxpc3Rlbihjb25maWcucG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZygnU3RhcnQgVERDIEFwcCcpXG4gIGNvbnNvbGUubG9nKCdCYWNrZW5kIEFwcCBSdW5uaW5nIGF0IFBvcnQnLCBjb25maWcucG9ydClcbiAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0tJylcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "req",
        "res",
        "next",
        "header",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "mongoose",
        "connect",
        "config",
        "dbConnectionString",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "connection",
        "on",
        "err",
        "console",
        "log",
        "error",
        "wwwPath",
        "path",
        "join",
        "__dirname",
        "Express",
        "static",
        "MainRoute",
        "listen",
        "port"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,uBAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,uBAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,kBAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACE,8BADF,EAEE,wCAFF;AAIAF,EAAAA,GAAG,CAACE,MAAJ,CACE,8BADF,EAEE,qCAFF;AAIAD,EAAAA,IAAI;AACL,CAZD;AAcAJ,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQK,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACC,GAAJ,CAAQK,oBAAWG,IAAX,EAAR,E,CAEA;;AACAC,kBAASC,OAAT,CAAiBC,gBAAOC,kBAAxB,EAA4C;AAC1CC,EAAAA,eAAe,EAAE,IADyB;AAE1CC,EAAAA,kBAAkB,EAAE;AAFsB,CAA5C;;AAIA,IAAMC,EAAE,GAAGN,kBAASO,UAApB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAe,UAACC,GAAD,EAAS;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAD,EAAAA,OAAO,CAACE,KAAR,CAAcH,GAAd;AACD,CAHD;AAIAH,EAAE,CAACE,EAAH,CAAM,MAAN,EAAc,YAAM;AAClBE,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,CAFD,E,CAIA;AACA;;AACA,IAAME,OAAO,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAhB;;AACA1B,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa0B,iBAAQC,MAAR,CAAeL,OAAf,CAAb;AACAvB,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiB0B,iBAAQC,MAAR,CAAeL,OAAf,CAAjB;AACAvB,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB0B,iBAAQC,MAAR,CAAeL,OAAf,CAAlB;AACAvB,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB0B,iBAAQC,MAAR,CAAeL,OAAf,CAAlB,E,CAEA;;AACAvB,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgB4B,kBAAhB;AAEA7B,GAAG,CAAC8B,MAAJ,CAAWlB,gBAAOmB,IAAlB,EAAwB,YAAM;AAC5BX,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CT,gBAAOmB,IAAlD;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,CAJD",
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/",
      "sourcesContent": [
        "import Express from 'express'\nimport config from './config.json'\nimport mongoose from 'mongoose'\nimport cors from 'cors'\nimport bodyParser from 'body-parser'\nimport MainRoute from './mainroute'\nimport path from 'path'\n\nconst app = Express()\n\n// Using Middleware\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', 'http://localhost:3000')\n  res.header('Access-Control-Allow-Origin', 'http://localhost')\n  res.header(\n    'Access-Control-Allow-Methods',\n    'POST, GET, PUT, PATCH, DELETE, OPTIONS'\n  )\n  res.header(\n    'Access-Control-Allow-Headers',\n    'Content-Type, Option, Authorization'\n  )\n  next()\n})\n\napp.use(cors())\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\n// Database\nmongoose.connect(config.dbConnectionString, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n})\nconst db = mongoose.connection\ndb.on('error', (err) => {\n  console.log('Connect to MongoDB have some error :( ')\n  console.error(err)\n})\ndb.on('open', () => {\n  console.log('Connect to Mongodb Success')\n})\n\n// Frontend Routing\n//TODO: Change it to render html static element\nconst wwwPath = path.join(__dirname, 'www')\napp.use('/', Express.static(wwwPath))\napp.use('/edit', Express.static(wwwPath))\napp.use('/login', Express.static(wwwPath))\napp.use('/about', Express.static(wwwPath))\n\n// Main Routing (it will behind the API)\napp.use('/api', MainRoute)\n\napp.listen(config.port, () => {\n  console.log('Start TDC App')\n  console.log('Backend App Running at Port', config.port)\n  console.log('-----------')\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609784182663
  },
  "{\"sourceRoot\":\"/home/theethawat/covid19-songkhla/src/Server/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/theethawat/covid19-songkhla/src/Server\",\"filename\":\"/home/theethawat/covid19-songkhla/src/Server/mainroute.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/theethawat/covid19-songkhla/src/Server\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/theethawat/covid19-songkhla/src/Server",
      "filename": "/home/theethawat/covid19-songkhla/src/Server/mainroute.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/theethawat/covid19-songkhla/src/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/theethawat/covid19-songkhla/src/Server/mainroute.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/theethawat/covid19-songkhla/src/Server/mainroute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/",
        "sourceFileName": "mainroute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _StatRoute = _interopRequireDefault(require(\"./Routes/StatRoute\"));\n\nvar app = _express.default.Router();\n\napp.get('/hello', function (req, res) {\n  res.send('World');\n});\napp.use('/case', _StatRoute.default);\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJhcHAiLCJFeHByZXNzIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsInVzZSIsIlN0YXRSb3V0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHQyxpQkFBUUMsTUFBUixFQUFaOztBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxPQUFUO0FBQ0QsQ0FGRDtBQUlBTixHQUFHLENBQUNPLEdBQUosQ0FBUSxPQUFSLEVBQWlCQyxrQkFBakI7ZUFFZVIsRyIsInNvdXJjZVJvb3QiOiIvaG9tZS90aGVldGhhd2F0L2NvdmlkMTktc29uZ2tobGEvc3JjL1NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IFN0YXRSb3V0ZSBmcm9tICcuL1JvdXRlcy9TdGF0Um91dGUnXG5jb25zdCBhcHAgPSBFeHByZXNzLlJvdXRlcigpXG5cbmFwcC5nZXQoJy9oZWxsbycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnV29ybGQnKVxufSlcblxuYXBwLnVzZSgnL2Nhc2UnLCBTdGF0Um91dGUpXG5cbmV4cG9ydCBkZWZhdWx0IGFwcFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "mainroute.js"
      ],
      "names": [
        "app",
        "Express",
        "Router",
        "get",
        "req",
        "res",
        "send",
        "use",
        "StatRoute"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA,IAAMA,GAAG,GAAGC,iBAAQC,MAAR,EAAZ;;AAEAF,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,OAAT;AACD,CAFD;AAIAN,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBC,kBAAjB;eAEeR,G",
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/",
      "sourcesContent": [
        "import Express from 'express'\nimport StatRoute from './Routes/StatRoute'\nconst app = Express.Router()\n\napp.get('/hello', (req, res) => {\n  res.send('World')\n})\n\napp.use('/case', StatRoute)\n\nexport default app\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609783551322
  },
  "{\"sourceRoot\":\"/home/theethawat/covid19-songkhla/src/Server/Routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/theethawat/covid19-songkhla/src/Server\",\"filename\":\"/home/theethawat/covid19-songkhla/src/Server/Routes/StatRoute.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/theethawat/covid19-songkhla/src/Server\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/Routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/theethawat/covid19-songkhla/src/Server",
      "filename": "/home/theethawat/covid19-songkhla/src/Server/Routes/StatRoute.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/theethawat/covid19-songkhla/src/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/theethawat/covid19-songkhla/src/Server/Routes/StatRoute.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/theethawat/covid19-songkhla/src/Server/Routes/StatRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/Routes/",
        "sourceFileName": "StatRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _Case = _interopRequireDefault(require(\"../Model/Case\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _objectHash = _interopRequireDefault(require(\"object-hash\"));\n\nrequire('dotenv').config();\n\nvar app = _express.default.Router();\n\nvar secret = (0, _objectHash.default)({\n  name: 'TheDuckCreator'\n});\napp.use(_bodyParser.default.urlencoded({\n  extended: false\n}));\napp.use(_bodyParser.default.json());\napp.post('/access/', /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(req, res) {\n    var payload, token;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('User Request Token');\n            console.log(secret);\n            payload = req.body;\n            token = _jsonwebtoken.default.sign(payload, secret);\n            res.send(token);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/', /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(req, res) {\n    var allCase, sortedCase;\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _Case.default.find({});\n\n          case 2:\n            allCase = _context2.sent;\n            sortedCase = _lodash.default.sortBy(allCase, ['date', 'desc']);\n            res.send(sortedCase);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/latest/', /*#__PURE__*/function () {\n  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(req, res) {\n    var allCase, sortedCase;\n    return _regenerator.default.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _Case.default.find({});\n\n          case 2:\n            allCase = _context3.sent;\n            sortedCase = _lodash.default.take(_lodash.default.sortBy(allCase, ['date', 'desc']), 1);\n            res.send(sortedCase);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.post('/', /*#__PURE__*/function () {\n  var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(req, res, next) {\n    var jwtKey, decode;\n    return _regenerator.default.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            jwtKey = _lodash.default.last(_lodash.default.split(req.headers.authorization, ' '));\n\n            try {\n              decode = _jsonwebtoken.default.verify(jwtKey, secret);\n\n              if (decode) {\n                console.log('Authen Pass!');\n                next();\n              }\n            } catch (err) {\n              console.log('Invalid Token');\n              console.log(err);\n              res.sendStatus(403);\n            }\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}(), /*#__PURE__*/function () {\n  var _ref5 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(req, res) {\n    var payload, newCase;\n    return _regenerator.default.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            payload = req.body;\n            _context5.next = 3;\n            return new _Case.default(payload);\n\n          case 3:\n            newCase = _context5.sent;\n            newCase.save();\n\n            if (newCase) {\n              res.sendStatus(200);\n            } else {\n              res.sendStatus(400);\n            }\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.put('/:id', /*#__PURE__*/function () {\n  var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(req, res, next) {\n    var jwtKey, decode;\n    return _regenerator.default.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            jwtKey = _lodash.default.last(_lodash.default.split(req.headers.authorization, ' '));\n\n            try {\n              decode = _jsonwebtoken.default.verify(jwtKey, secret);\n\n              if (decode) {\n                console.log('Authen Pass!');\n                next();\n              }\n            } catch (err) {\n              console.log('Invalid Token');\n              console.log(err);\n              res.sendStatus(403);\n            }\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x12, _x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}(), /*#__PURE__*/function () {\n  var _ref7 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(req, res) {\n    var caseId, payload, editedCase;\n    return _regenerator.default.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            caseId = req.params.id;\n            payload = req.body;\n            _context7.next = 4;\n            return _Case.default.findOneAndUpdate(caseId, {\n              $set: payload\n            });\n\n          case 4:\n            editedCase = _context7.sent;\n\n            if (editedCase) {\n              res.send(200);\n            } else {\n              res.send(400);\n            }\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.delete('/:id', /*#__PURE__*/function () {\n  var _ref8 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(req, res, next) {\n    var jwtKey, decode;\n    return _regenerator.default.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            jwtKey = _lodash.default.last(_lodash.default.split(req.headers.authorization, ' '));\n\n            try {\n              decode = _jsonwebtoken.default.verify(jwtKey, secret);\n\n              if (decode) {\n                console.log('Authen Pass!');\n                next();\n              }\n            } catch (err) {\n              console.log('Invalid Token');\n              console.log(err);\n              res.sendStatus(403);\n            }\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x17, _x18, _x19) {\n    return _ref8.apply(this, arguments);\n  };\n}(), /*#__PURE__*/function () {\n  var _ref9 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(req, res) {\n    var caseId, deletedCase;\n    return _regenerator.default.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            caseId = req.params.id;\n            _context9.next = 3;\n            return _Case.default.findByIdAndDelete(caseId);\n\n          case 3:\n            deletedCase = _context9.sent;\n\n            if (deletedCase) {\n              res.send(200);\n            } else {\n              res.send(400);\n            }\n\n          case 5:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x20, _x21) {\n    return _ref9.apply(this, arguments);\n  };\n}());\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0YXRSb3V0ZS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiYXBwIiwiRXhwcmVzcyIsIlJvdXRlciIsInNlY3JldCIsIm5hbWUiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwicGF5bG9hZCIsImJvZHkiLCJ0b2tlbiIsImp3dCIsInNpZ24iLCJzZW5kIiwiZ2V0IiwiQ2FzZU1vZGVsIiwiZmluZCIsImFsbENhc2UiLCJzb3J0ZWRDYXNlIiwiXyIsInNvcnRCeSIsInRha2UiLCJuZXh0Iiwiand0S2V5IiwibGFzdCIsInNwbGl0IiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJkZWNvZGUiLCJ2ZXJpZnkiLCJlcnIiLCJzZW5kU3RhdHVzIiwibmV3Q2FzZSIsInNhdmUiLCJwdXQiLCJjYXNlSWQiLCJwYXJhbXMiLCJpZCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZWRpdGVkQ2FzZSIsImRlbGV0ZSIsImZpbmRCeUlkQW5kRGVsZXRlIiwiZGVsZXRlZENhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBRUEsSUFBTUMsR0FBRyxHQUFHQyxpQkFBUUMsTUFBUixFQUFaOztBQUNBLElBQU1DLE1BQU0sR0FBRyx5QkFBSztBQUFFQyxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUFMLENBQWY7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVFDLG9CQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQVIsR0FBRyxDQUFDSyxHQUFKLENBQVFDLG9CQUFXRyxJQUFYLEVBQVI7QUFFQVQsR0FBRyxDQUFDVSxJQUFKLENBQVMsVUFBVDtBQUFB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QixHQUFaO0FBQ0F6QixjQUFBQSxHQUFHLENBQUMwQixVQUFKLENBQWUsR0FBZjtBQUNEOztBQVpIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBRkY7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzRkFnQkUsa0JBQU8zQixHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ004QixZQUFBQSxNQUROLEdBQ2UvQixHQUFHLENBQUNnQyxNQUFKLENBQVdDLEVBRDFCO0FBQUE7QUFBQSxtQkFFMEJ0QixjQUFVMkIsaUJBQVYsQ0FBNEJQLE1BQTVCLENBRjFCOztBQUFBO0FBRU1RLFlBQUFBLFdBRk47O0FBR0UsZ0JBQUlBLFdBQUosRUFBaUI7QUFDZnRDLGNBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTLEdBQVQ7QUFDRCxhQUZELE1BRU87QUFDTFIsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVMsR0FBVDtBQUNEOztBQVBIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBaEJGOztBQUFBO0FBQUE7QUFBQTtBQUFBO2VBMkJlcEIsRyIsInNvdXJjZVJvb3QiOiIvaG9tZS90aGVldGhhd2F0L2NvdmlkMTktc29uZ2tobGEvc3JjL1NlcnZlci9Sb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBDYXNlTW9kZWwgZnJvbSAnLi4vTW9kZWwvQ2FzZSdcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXG5pbXBvcnQgaGFzaCBmcm9tICdvYmplY3QtaGFzaCdcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpXG5cbmNvbnN0IGFwcCA9IEV4cHJlc3MuUm91dGVyKClcbmNvbnN0IHNlY3JldCA9IGhhc2goeyBuYW1lOiAnVGhlRHVja0NyZWF0b3InIH0pXG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKVxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcblxuYXBwLnBvc3QoJy9hY2Nlc3MvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdVc2VyIFJlcXVlc3QgVG9rZW4nKVxuICBjb25zb2xlLmxvZyhzZWNyZXQpXG4gIGxldCBwYXlsb2FkID0gcmVxLmJvZHlcbiAgbGV0IHRva2VuID0gand0LnNpZ24ocGF5bG9hZCwgc2VjcmV0KVxuICByZXMuc2VuZCh0b2tlbilcbn0pXG5cbmFwcC5nZXQoJy8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgbGV0IGFsbENhc2UgPSBhd2FpdCBDYXNlTW9kZWwuZmluZCh7fSlcbiAgbGV0IHNvcnRlZENhc2UgPSBfLnNvcnRCeShhbGxDYXNlLCBbJ2RhdGUnLCAnZGVzYyddKVxuICByZXMuc2VuZChzb3J0ZWRDYXNlKVxufSlcblxuYXBwLmdldCgnL2xhdGVzdC8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgbGV0IGFsbENhc2UgPSBhd2FpdCBDYXNlTW9kZWwuZmluZCh7fSlcbiAgbGV0IHNvcnRlZENhc2UgPSBfLnRha2UoXy5zb3J0QnkoYWxsQ2FzZSwgWydkYXRlJywgJ2Rlc2MnXSksIDEpXG4gIHJlcy5zZW5kKHNvcnRlZENhc2UpXG59KVxuXG5hcHAucG9zdChcbiAgJy8nLFxuICBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBsZXQgand0S2V5ID0gXy5sYXN0KF8uc3BsaXQocmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbiwgJyAnKSlcbiAgICB0cnkge1xuICAgICAgbGV0IGRlY29kZSA9IGp3dC52ZXJpZnkoand0S2V5LCBzZWNyZXQpXG4gICAgICBpZiAoZGVjb2RlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBdXRoZW4gUGFzcyEnKVxuICAgICAgICBuZXh0KClcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdJbnZhbGlkIFRva2VuJylcbiAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgIHJlcy5zZW5kU3RhdHVzKDQwMylcbiAgICB9XG4gIH0sXG4gIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBwYXlsb2FkID0gcmVxLmJvZHlcbiAgICBsZXQgbmV3Q2FzZSA9IGF3YWl0IG5ldyBDYXNlTW9kZWwocGF5bG9hZClcbiAgICBuZXdDYXNlLnNhdmUoKVxuXG4gICAgaWYgKG5ld0Nhc2UpIHtcbiAgICAgIHJlcy5zZW5kU3RhdHVzKDIwMClcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnNlbmRTdGF0dXMoNDAwKVxuICAgIH1cbiAgfVxuKVxuXG5hcHAucHV0KFxuICAnLzppZCcsXG4gIGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGxldCBqd3RLZXkgPSBfLmxhc3QoXy5zcGxpdChyZXEuaGVhZGVycy5hdXRob3JpemF0aW9uLCAnICcpKVxuICAgIHRyeSB7XG4gICAgICBsZXQgZGVjb2RlID0gand0LnZlcmlmeShqd3RLZXksIHNlY3JldClcbiAgICAgIGlmIChkZWNvZGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0F1dGhlbiBQYXNzIScpXG4gICAgICAgIG5leHQoKVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coJ0ludmFsaWQgVG9rZW4nKVxuICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgcmVzLnNlbmRTdGF0dXMoNDAzKVxuICAgIH1cbiAgfSxcbiAgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgbGV0IGNhc2VJZCA9IHJlcS5wYXJhbXMuaWRcbiAgICBsZXQgcGF5bG9hZCA9IHJlcS5ib2R5XG4gICAgbGV0IGVkaXRlZENhc2UgPSBhd2FpdCBDYXNlTW9kZWwuZmluZE9uZUFuZFVwZGF0ZShjYXNlSWQsIHsgJHNldDogcGF5bG9hZCB9KVxuICAgIGlmIChlZGl0ZWRDYXNlKSB7XG4gICAgICByZXMuc2VuZCgyMDApXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zZW5kKDQwMClcbiAgICB9XG4gIH1cbilcblxuYXBwLmRlbGV0ZShcbiAgJy86aWQnLFxuICBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBsZXQgand0S2V5ID0gXy5sYXN0KF8uc3BsaXQocmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbiwgJyAnKSlcbiAgICB0cnkge1xuICAgICAgbGV0IGRlY29kZSA9IGp3dC52ZXJpZnkoand0S2V5LCBzZWNyZXQpXG4gICAgICBpZiAoZGVjb2RlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBdXRoZW4gUGFzcyEnKVxuICAgICAgICBuZXh0KClcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdJbnZhbGlkIFRva2VuJylcbiAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgIHJlcy5zZW5kU3RhdHVzKDQwMylcbiAgICB9XG4gIH0sXG4gIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBjYXNlSWQgPSByZXEucGFyYW1zLmlkXG4gICAgbGV0IGRlbGV0ZWRDYXNlID0gYXdhaXQgQ2FzZU1vZGVsLmZpbmRCeUlkQW5kRGVsZXRlKGNhc2VJZClcbiAgICBpZiAoZGVsZXRlZENhc2UpIHtcbiAgICAgIHJlcy5zZW5kKDIwMClcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnNlbmQoNDAwKVxuICAgIH1cbiAgfVxuKVxuXG5leHBvcnQgZGVmYXVsdCBhcHBcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "StatRoute.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "Express",
        "Router",
        "secret",
        "name",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "console",
        "log",
        "payload",
        "body",
        "token",
        "jwt",
        "sign",
        "send",
        "get",
        "CaseModel",
        "find",
        "allCase",
        "sortedCase",
        "_",
        "sortBy",
        "take",
        "next",
        "jwtKey",
        "last",
        "split",
        "headers",
        "authorization",
        "decode",
        "verify",
        "err",
        "sendStatus",
        "newCase",
        "save",
        "put",
        "caseId",
        "params",
        "id",
        "findOneAndUpdate",
        "$set",
        "editedCase",
        "delete",
        "findByIdAndDelete",
        "deletedCase"
      ],
      "mappings": "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",
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/Routes/",
      "sourcesContent": [
        "import Express from 'express'\nimport CaseModel from '../Model/Case'\nimport _ from 'lodash'\nimport bodyParser from 'body-parser'\nimport jwt from 'jsonwebtoken'\nimport hash from 'object-hash'\nrequire('dotenv').config()\n\nconst app = Express.Router()\nconst secret = hash({ name: 'TheDuckCreator' })\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\napp.post('/access/', async (req, res) => {\n  console.log('User Request Token')\n  console.log(secret)\n  let payload = req.body\n  let token = jwt.sign(payload, secret)\n  res.send(token)\n})\n\napp.get('/', async (req, res) => {\n  let allCase = await CaseModel.find({})\n  let sortedCase = _.sortBy(allCase, ['date', 'desc'])\n  res.send(sortedCase)\n})\n\napp.get('/latest/', async (req, res) => {\n  let allCase = await CaseModel.find({})\n  let sortedCase = _.take(_.sortBy(allCase, ['date', 'desc']), 1)\n  res.send(sortedCase)\n})\n\napp.post(\n  '/',\n  async (req, res, next) => {\n    let jwtKey = _.last(_.split(req.headers.authorization, ' '))\n    try {\n      let decode = jwt.verify(jwtKey, secret)\n      if (decode) {\n        console.log('Authen Pass!')\n        next()\n      }\n    } catch (err) {\n      console.log('Invalid Token')\n      console.log(err)\n      res.sendStatus(403)\n    }\n  },\n  async (req, res) => {\n    let payload = req.body\n    let newCase = await new CaseModel(payload)\n    newCase.save()\n\n    if (newCase) {\n      res.sendStatus(200)\n    } else {\n      res.sendStatus(400)\n    }\n  }\n)\n\napp.put(\n  '/:id',\n  async (req, res, next) => {\n    let jwtKey = _.last(_.split(req.headers.authorization, ' '))\n    try {\n      let decode = jwt.verify(jwtKey, secret)\n      if (decode) {\n        console.log('Authen Pass!')\n        next()\n      }\n    } catch (err) {\n      console.log('Invalid Token')\n      console.log(err)\n      res.sendStatus(403)\n    }\n  },\n  async (req, res) => {\n    let caseId = req.params.id\n    let payload = req.body\n    let editedCase = await CaseModel.findOneAndUpdate(caseId, { $set: payload })\n    if (editedCase) {\n      res.send(200)\n    } else {\n      res.send(400)\n    }\n  }\n)\n\napp.delete(\n  '/:id',\n  async (req, res, next) => {\n    let jwtKey = _.last(_.split(req.headers.authorization, ' '))\n    try {\n      let decode = jwt.verify(jwtKey, secret)\n      if (decode) {\n        console.log('Authen Pass!')\n        next()\n      }\n    } catch (err) {\n      console.log('Invalid Token')\n      console.log(err)\n      res.sendStatus(403)\n    }\n  },\n  async (req, res) => {\n    let caseId = req.params.id\n    let deletedCase = await CaseModel.findByIdAndDelete(caseId)\n    if (deletedCase) {\n      res.send(200)\n    } else {\n      res.send(400)\n    }\n  }\n)\n\nexport default app\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609783551322
  },
  "{\"sourceRoot\":\"/home/theethawat/covid19-songkhla/src/Server/Model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/theethawat/covid19-songkhla/src/Server\",\"filename\":\"/home/theethawat/covid19-songkhla/src/Server/Model/Case.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/theethawat/covid19-songkhla/src/Server\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/Model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/theethawat/covid19-songkhla/src/Server",
      "filename": "/home/theethawat/covid19-songkhla/src/Server/Model/Case.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/theethawat/covid19-songkhla/src/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/theethawat/covid19-songkhla/src/Server/Model/Case.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/theethawat/covid19-songkhla/src/Server/Model/Case.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/Model/",
        "sourceFileName": "Case.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar Schema = _mongoose.default.Schema;\nvar caseSchema = new Schema({\n  date: String,\n  newCase: Number,\n  newFinding: Number,\n  newNegative: Number,\n  allFinding: Number,\n  allNegative: Number,\n  secondWaveCase: Number,\n  allCase: Number,\n  waiting: Number,\n  riskGroup: Number,\n  groupColor: String\n});\n\nvar userModel = _mongoose.default.model('Case', caseSchema);\n\nvar _default = userModel;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhc2UuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwiTW9uZ29vc2UiLCJjYXNlU2NoZW1hIiwiZGF0ZSIsIlN0cmluZyIsIm5ld0Nhc2UiLCJOdW1iZXIiLCJuZXdGaW5kaW5nIiwibmV3TmVnYXRpdmUiLCJhbGxGaW5kaW5nIiwiYWxsTmVnYXRpdmUiLCJzZWNvbmRXYXZlQ2FzZSIsImFsbENhc2UiLCJ3YWl0aW5nIiwicmlza0dyb3VwIiwiZ3JvdXBDb2xvciIsInVzZXJNb2RlbCIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLGtCQUFTRCxNQUF4QjtBQUVBLElBQU1FLFVBQVUsR0FBRyxJQUFJRixNQUFKLENBQVc7QUFDNUJHLEVBQUFBLElBQUksRUFBRUMsTUFEc0I7QUFFNUJDLEVBQUFBLE9BQU8sRUFBRUMsTUFGbUI7QUFHNUJDLEVBQUFBLFVBQVUsRUFBRUQsTUFIZ0I7QUFJNUJFLEVBQUFBLFdBQVcsRUFBRUYsTUFKZTtBQUs1QkcsRUFBQUEsVUFBVSxFQUFFSCxNQUxnQjtBQU01QkksRUFBQUEsV0FBVyxFQUFFSixNQU5lO0FBTzVCSyxFQUFBQSxjQUFjLEVBQUVMLE1BUFk7QUFRNUJNLEVBQUFBLE9BQU8sRUFBRU4sTUFSbUI7QUFTNUJPLEVBQUFBLE9BQU8sRUFBRVAsTUFUbUI7QUFVNUJRLEVBQUFBLFNBQVMsRUFBRVIsTUFWaUI7QUFXNUJTLEVBQUFBLFVBQVUsRUFBRVg7QUFYZ0IsQ0FBWCxDQUFuQjs7QUFjQSxJQUFNWSxTQUFTLEdBQUdmLGtCQUFTZ0IsS0FBVCxDQUFlLE1BQWYsRUFBdUJmLFVBQXZCLENBQWxCOztlQUNlYyxTIiwic291cmNlUm9vdCI6Ii9ob21lL3RoZWV0aGF3YXQvY292aWQxOS1zb25na2hsYS9zcmMvU2VydmVyL01vZGVsLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb25nb29zZSBmcm9tICdtb25nb29zZSdcbmNvbnN0IFNjaGVtYSA9IE1vbmdvb3NlLlNjaGVtYVxuXG5jb25zdCBjYXNlU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIGRhdGU6IFN0cmluZyxcbiAgbmV3Q2FzZTogTnVtYmVyLFxuICBuZXdGaW5kaW5nOiBOdW1iZXIsXG4gIG5ld05lZ2F0aXZlOiBOdW1iZXIsXG4gIGFsbEZpbmRpbmc6IE51bWJlcixcbiAgYWxsTmVnYXRpdmU6IE51bWJlcixcbiAgc2Vjb25kV2F2ZUNhc2U6IE51bWJlcixcbiAgYWxsQ2FzZTogTnVtYmVyLFxuICB3YWl0aW5nOiBOdW1iZXIsXG4gIHJpc2tHcm91cDogTnVtYmVyLFxuICBncm91cENvbG9yOiBTdHJpbmcsXG59KVxuXG5jb25zdCB1c2VyTW9kZWwgPSBNb25nb29zZS5tb2RlbCgnQ2FzZScsIGNhc2VTY2hlbWEpXG5leHBvcnQgZGVmYXVsdCB1c2VyTW9kZWxcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Case.js"
      ],
      "names": [
        "Schema",
        "Mongoose",
        "caseSchema",
        "date",
        "String",
        "newCase",
        "Number",
        "newFinding",
        "newNegative",
        "allFinding",
        "allNegative",
        "secondWaveCase",
        "allCase",
        "waiting",
        "riskGroup",
        "groupColor",
        "userModel",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA,IAAMA,MAAM,GAAGC,kBAASD,MAAxB;AAEA,IAAME,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAC5BG,EAAAA,IAAI,EAAEC,MADsB;AAE5BC,EAAAA,OAAO,EAAEC,MAFmB;AAG5BC,EAAAA,UAAU,EAAED,MAHgB;AAI5BE,EAAAA,WAAW,EAAEF,MAJe;AAK5BG,EAAAA,UAAU,EAAEH,MALgB;AAM5BI,EAAAA,WAAW,EAAEJ,MANe;AAO5BK,EAAAA,cAAc,EAAEL,MAPY;AAQ5BM,EAAAA,OAAO,EAAEN,MARmB;AAS5BO,EAAAA,OAAO,EAAEP,MATmB;AAU5BQ,EAAAA,SAAS,EAAER,MAViB;AAW5BS,EAAAA,UAAU,EAAEX;AAXgB,CAAX,CAAnB;;AAcA,IAAMY,SAAS,GAAGf,kBAASgB,KAAT,CAAe,MAAf,EAAuBf,UAAvB,CAAlB;;eACec,S",
      "sourceRoot": "/home/theethawat/covid19-songkhla/src/Server/Model/",
      "sourcesContent": [
        "import Mongoose from 'mongoose'\nconst Schema = Mongoose.Schema\n\nconst caseSchema = new Schema({\n  date: String,\n  newCase: Number,\n  newFinding: Number,\n  newNegative: Number,\n  allFinding: Number,\n  allNegative: Number,\n  secondWaveCase: Number,\n  allCase: Number,\n  waiting: Number,\n  riskGroup: Number,\n  groupColor: String,\n})\n\nconst userModel = Mongoose.model('Case', caseSchema)\nexport default userModel\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609783551322
  }
}